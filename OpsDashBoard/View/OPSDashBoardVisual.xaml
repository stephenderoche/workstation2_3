<UserControl x:Class="OPSDashBoard.Client.View.OPSDashBoardVisual"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
             xmlns:dxit="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:OPSDashBoard.Client"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             mc:Ignorable="d" Height="auto" Width="auto" 
             Loaded="UserControl_Loaded" 
             
           
            
             >
    <UserControl.Resources>

        <SolidColorBrush x:Key="UnfocusedRowBrush" Color="#FF666666" />

        <Style TargetType="dxg:GridColumnHeader">
            <Setter Property="Background" Value="SeaGreen"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="dxg:GridControl">
            <Setter Property="Background" Value="SeaGreen"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <sys:Double x:Key="maxHeaderHeight">
            40
        </sys:Double>

        <DataTemplate x:Key="wrapHeader">
            <TextBlock Text="{Binding}" MaxHeight="{StaticResource maxHeaderHeight}" TextWrapping="Wrap" TextAlignment="Center" />
        </DataTemplate>





        <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowStyle, IsThemeIndependent=True}" >
        
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush, ThemeName=MetropolisDark}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="SelectedRowStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter Property="dxg:RowControl.Background" Value="Gray" />
                    <Setter Property="TextElement.Foreground" Value="White" />
                </DataTrigger>
                <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                    <Setter Property="dxg:RowControl.Background" Value="CadetBlue" />
                    <Setter Property="TextElement.Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>


    </UserControl.Resources>

    <Grid VerticalAlignment="Stretch" Width="auto"  Height="Auto" HorizontalAlignment="Stretch" Background="#ffe5e3d8" >
        <Grid.Resources>

            <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowContentTemplate, IsThemeIndependent=True}" TargetType="{x:Type ContentControl}">
                <Grid Background="Transparent" >
                    <Border x:Name="groupRowBorder"  Background="{TemplateBinding Background}"
                        BorderBrush="#FF515151" BorderThickness="0,0,0,1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" >
                        <Grid>
                            <Border x:Name="groupRowBorderSelected"  
                                Background="#FFF78A09" >
                                <Border.Visibility>
                                    <Binding Path="SelectionState">
                                        <Binding.Converter>
                                            <dxg:SelectionStateToVisibilityConverter Value="Selected" />
                                        </Binding.Converter>
                                    </Binding>
                                </Border.Visibility>
                            </Border>
                            <Border x:Name="groupRowBorderFocused" Background="{Binding ., Converter={StaticResource con}}">

                                <Border.Visibility>
                                    <Binding Path="SelectionState">
                                        <Binding.Converter>
                                            <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                                        </Binding.Converter>
                                    </Binding>
                                </Border.Visibility>
                            </Border>
                            <Border Visibility="Collapsed" 
                                Background="{StaticResource UnfocusedRowBrush}" 
                                dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" 
                                dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}"
                                dxg:FadeSelectionHelper.Opacity="1" 
                                dxg:FadeSelectionHelper.IsSelected="{Binding SelectionState, Converter={dxg:SelectionStateToBooleanConverter}}" />
                            <ContentPresenter>
                                <ContentPresenter.Margin>
                                    <Binding Path="GroupLevel">
                                        <Binding.Converter>
                                            <dxg:GroupLevelToMarginConverter />
                                        </Binding.Converter>
                                        <Binding.ConverterParameter>
                                            <Thickness>28,0,0,0</Thickness>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </ContentPresenter.Margin>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                </Grid>
            </ControlTemplate>

            <ControlTemplate 
                             x:Key="{dxgt:GridControlThemeKey ResourceKey=BorderTemplate, IsThemeIndependent=True}"
                             TargetType="{x:Type ContentControl}">
                <Border Background="#FFE5E5D8">
                    <Border.Padding>
                        <Binding Path="(dxg:GridBorderHelper.ShowBorder)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                            </Binding.Converter>
                        </Binding>
                    </Border.Padding>
                    <Border Background="#FFE5E5D8">
                        <ContentPresenter />
                    </Border>
                </Border>
            </ControlTemplate>



            <DataTemplate x:Key="renameColumnHeaderTemplate">
                <Grid>
                    <dxe:TextEdit
                        EditValue="{Binding Path=DataContext.Header, 
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderContentControl}}" 
                        Foreground="Black" 
                        Visibility="{Binding Path=DataContext.(local:ColumnBehavior.IsRenameEditorActivated), 
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderContentControl}, 
                        Converter={local:VisibilityConverter},
                        Mode=TwoWay}"                    
                        Name="textEdit"
                        LostFocus="OnRenameEditorLostFocus"/>
                    <TextBlock 
                        VerticalAlignment="Center"
                        Text="{Binding}" 
                        Visibility="{Binding Path=Visibility, ElementName=textEdit, Converter={local:ReverseVisibilityConverter}}"
                        MaxHeight="{StaticResource maxHeaderHeight}" TextWrapping="Wrap" TextAlignment="Center"
                        />

                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="wrapHeader">
                <TextBlock Text="{Binding}" MaxHeight="{StaticResource maxHeaderHeight}" TextWrapping="Wrap" TextAlignment="Center" />
            </DataTemplate>
        </Grid.Resources>
        <TabControl>
            <!--<TabItem Header="Workstation" x:Name="ByWorkstation" Background="SeaGreen" FontSize="14" FontWeight="Bold">
                <Grid x:Name="LayoutRoot">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Rectangle Margin="0.003,0,0.014,2.014" Stroke="Black" Grid.Row="1" RenderTransformOrigin="0.5,0.5" RadiusY="48.204" RadiusX="48.204">
                        <Rectangle.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="-360.198"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Rectangle.RenderTransform>
                        <Rectangle.OpacityMask>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFF6F6F6" Offset="0.236"/>
                                <GradientStop Color="Black" Offset="0.246"/>
                                <GradientStop Color="#FF7FC0F6" Offset="0.252"/>
                                <GradientStop Color="#FFF6F6BF" Offset="0.259"/>
                                <GradientStop Color="#FF7F0000" Offset="0.266"/>
                                <GradientStop Color="Black" Offset="0.276"/>
                                <GradientStop Color="#FF3781C7" Offset="0.283"/>
                                <GradientStop Color="#FFEEF6F6" Offset="0.29"/>
                                <GradientStop Color="#FFF6F6F6" Offset="0.306"/>
                                <GradientStop Color="#FFF6C07F" Offset="0.313"/>
                                <GradientStop Color="Black" Offset="0.32"/>
                                <GradientStop Color="#FF007DBF" Offset="0.327"/>
                                <GradientStop Color="#FFF6F6DF" Offset="0.337"/>
                                <GradientStop Color="#FF9F5200" Offset="0.343"/>
                                <GradientStop Color="#FF000017" Offset="0.35"/>
                                <GradientStop Color="#FF000017" Offset="0.36"/>
                                <GradientStop Color="#FF284A67" Offset="0.367"/>
                                <GradientStop Color="#FF87A0B6" Offset="0.374"/>
                                <GradientStop Color="#FFCEE3F6" Offset="0.381"/>
                                <GradientStop Color="#FF4079B6" Offset="0.39"/>
                                <GradientStop Color="#FFE7F6F6" Offset="0.397"/>
                                <GradientStop Color="#FFF6C07F" Offset="0.404"/>
                                <GradientStop Color="Black" Offset="0.411"/>
                                <GradientStop Color="#FF0079BF" Offset="0.421"/>
                                <GradientStop Color="#FFF6F6F6" Offset="0.428"/>
                                <GradientStop Color="#FFF6F6EE" Offset="0.451"/>
                                <GradientStop Color="#FFB67100" Offset="0.458"/>
                                <GradientStop Color="#FF000040" Offset="0.465"/>
                                <GradientStop Color="#FFD6F6F6" Offset="0.475"/>
                                <GradientStop Color="#FFF6DB9F" Offset="0.481"/>
                                <GradientStop Color="#FF4F0000" Offset="0.488"/>
                                <GradientStop Color="#FF00529F" Offset="0.495"/>
                                <GradientStop Color="#FFDFF6F6" Offset="0.505"/>
                                <GradientStop Color="#FFF6F6F6" Offset="0.512"/>
                                <GradientStop Color="#FFF6D79F" Offset="0.519"/>
                                <GradientStop Color="#FF4F0000" Offset="0.525"/>
                                <GradientStop Color="Black" Offset="0.535"/>
                                <GradientStop Color="#FF3789A1" Offset="0.542"/>
                                <GradientStop Color="#FF872E00" Offset="0.549"/>
                                <GradientStop Color="#FFF6F6F6" Offset="0.559"/>
                                <GradientStop Color="#FF463624" Offset="0.409"/>
                                <GradientStop Color="#FFEFD7B2" Offset="0.401"/>
                            </LinearGradientBrush>
                        </Rectangle.OpacityMask>
                        <Rectangle.Fill>
                            <RadialGradientBrush>
                                <GradientStop Color="#FFF9E852" Offset="0.994"/>
                                <GradientStop Color="#FFFDC763" Offset="0.792"/>
                                <GradientStop Color="#FFF7C378" Offset="0.751"/>
                                <GradientStop Color="#FFF9CA94" Offset="0.74"/>
                                <GradientStop Color="#FFEFCDB4" Offset="0.695"/>
                                <GradientStop Color="#FFF8EAE1" Offset="0.69"/>
                                <GradientStop Color="#FFEACEB9" Offset="0.686"/>
                                <GradientStop Color="#FFE2BBAA" Offset="0.68"/>
                                <GradientStop Color="#FFE5C8B8" Offset="0.675"/>
                                <GradientStop Color="#FFD3B7A9" Offset="0.665"/>
                                <GradientStop Color="#FFD7BCB3" Offset="0.65"/>
                                <GradientStop Color="#FFEDE2DE" Offset="0.645"/>
                                <GradientStop Color="#FFECE2D9" Offset="0.639"/>
                                <GradientStop Color="#FFC9B1A7" Offset="0.63"/>
                                <GradientStop Color="#FFCBB8B2" Offset="0.624"/>
                                <GradientStop Color="#FFA09194" Offset="0.609"/>
                                <GradientStop Color="#FF8D838C" Offset="0.589"/>
                                <GradientStop Color="#FF766972" Offset="0.574"/>
                                <GradientStop Color="#FF584348" Offset="0.563"/>
                                <GradientStop Color="#FF61484B" Offset="0.559"/>
                                <GradientStop Color="#FF321C1F" Offset="0.548"/>
                                <GradientStop Color="#FF5D3E3C" Offset="0.527"/>
                                <GradientStop Color="#FF3A2729" Offset="0.518"/>
                                <GradientStop Color="#FF4B3333" Offset="0.512"/>
                                <GradientStop Color="#FF4F3536" Offset="0.492"/>
                                <GradientStop Color="#FF32272F" Offset="0.482"/>
                                <GradientStop Color="#FF4F393B" Offset="0.477"/>
                                <GradientStop Color="#FF392E32" Offset="0.467"/>
                                <GradientStop Color="#FF5C4648" Offset="0.462"/>
                                <GradientStop Color="#FF544447" Offset="0.456"/>
                                <GradientStop Color="#FF6D504C" Offset="0.447"/>
                                <GradientStop Color="#FF493939" Offset="0.441"/>
                                <GradientStop Color="#FF86293B" Offset="0.432"/>
                                <GradientStop Color="#FF5A1D2C" Offset="0.421"/>
                                <GradientStop Color="#FF512D31" Offset="0.406"/>
                                <GradientStop Color="#FF693D3E" Offset="0.391"/>
                                <GradientStop Color="#FF623A38" Offset="0.381"/>
                                <GradientStop Color="#FF79524D" Offset="0.361"/>
                                <GradientStop Color="#FF5C3B36" Offset="0.355"/>
                                <GradientStop Color="#FF7B564D" Offset="0.335"/>
                                <GradientStop Color="#FF4F444C" Offset="0.32"/>
                                <GradientStop Color="#FF594A4F" Offset="0.314"/>
                                <GradientStop Color="#FF78605E" Offset="0.31"/>
                                <GradientStop Color="#FF574C54" Offset="0.295"/>
                                <GradientStop Color="#FF816564" Offset="0.275"/>
                                <GradientStop Color="#FF5F4E58" Offset="0.264"/>
                                <GradientStop Color="#FF75515B" Offset="0.254"/>
                                <GradientStop Color="#FF64505B" Offset="0.239"/>
                                <GradientStop Color="#FF9A6170" Offset="0.219"/>
                                <GradientStop Color="#FFA26876" Offset="0.204"/>
                                <GradientStop Color="#FF604E5A" Offset="0.107"/>
                                <GradientStop Color="#FF5F4552" Offset="0.045"/>
                            </RadialGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Grid>
            </TabItem>-->
        <!--Dataloads-->
        <TabItem Header="Data Loads" x:Name="ByDataLoadsTabItem" Background="SeaGreen" FontSize="14" FontWeight="Bold">
        <Grid VerticalAlignment="Stretch" Width="auto"  Height="Auto" HorizontalAlignment="Stretch" Background="#ffe5e3d8" >
       
  
        <Grid.RowDefinitions>
            <RowDefinition Height="0" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>


        <GridSplitter Grid.Row="1" VerticalAlignment="top"  Height="7" Background="Black"  
			x:Name="lblborder" FontWeight="Bold" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Grid.Column="0"/>
        <GridSplitter  HorizontalAlignment="left" Grid.Column="1" Width="7" Background="Black"  Grid.Row="1"
                       x:Name="lblborder1" FontWeight="Bold" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch"  />

        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
        <dxe:TextEdit EditValue="{Binding Parameters.LoadPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			HorizontalAlignment="Left" 
            Grid.Row="0"  
            ToolTip="DownLoad RunPath"
			Margin="8,5,0,0"  
			AllowDrop="True"
			VerticalAlignment="Top" Width="500"  
			ValidateOnTextInput="False"      
            Name="loadPath" LostFocus="loadPath_LostFocus" Loaded="loadPath_Loaded"
		      >


        </dxe:TextEdit>

        <Image  Height="20"  Margin="8,5,0,0"   Width="20" Name="ImgFileExist"  VerticalAlignment="Top" />
            
        <dxe:TextEdit EditValue="{Binding Parameters.LogPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			HorizontalAlignment="Left" 
            ToolTip="DownLoad Log Path"
            Grid.Row="0"             
			Margin="8,5,0,0"  
			AllowDrop="True"
			VerticalAlignment="Top" Width="500"  
			ValidateOnTextInput="False"      
            Name="logPath" 
            Text="C:\Program Files (x86)\Linedata Services\LongView Download\download.log"
		      />

        </StackPanel>
        <StackPanel Grid.Row="1" Orientation="Horizontal" Grid.ColumnSpan="1">
            <dxe:DateEdit EditValue="{Binding Parameters.RunDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1"
			HorizontalAlignment="Left" Margin="8,8,0,0" VerticalAlignment="Top" Width="150" x:Name="txtenddate" FontFamily="Calibri" FontSize="14" Height="20"  EditValueChanged="start_EditValueChanged"/>

            <CheckBox Grid.Row="1" HorizontalAlignment="Left" Margin="8,12,0,0" Content="Use Current Data" Height="20" VerticalAlignment="Top" Name="chkUseCurrent"
                  IsChecked="{Binding Parameters.UseCurrent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Unchecked="CheckBox_Unchecked" Checked="CheckBox_Checked"/>
        
        <Button  Margin="8,8,0,0" HorizontalAlignment="Left" Content="Run Loads" ToolTip="Run Data" Grid.Row="1"  Click="Button_Click" Height="22"  VerticalAlignment="Top" Background="LightBlue">
          
        </Button>

            <Button  Margin="8,8,0,0" HorizontalAlignment="Left" Content="Log File" ToolTip="Open Log File" Grid.Row="1"  Click="Button_log_Click" Height="22"  VerticalAlignment="Top" Background="LightBlue">

            </Button>



        </StackPanel>

        <dxg:GridControl   AutoGenerateColumns="AddNew" EnableSmartColumnsGeneration="False"   x:Name="_dataGrid"   Visibility="visible"
                          FontWeight="SemiBold"     AllowLiveDataShaping="True"  Margin="0,35,0,0" Grid.Row="1"
                          HorizontalAlignment="Stretch" 
                          HorizontalContentAlignment="Stretch" 
                          FontSize="12" FontFamily="Calibri" 
                          ItemsSource="{Binding MyDataTable.DefaultView,Mode=OneWay,UpdateSourceTrigger=Default}"
                          SelectionMode="Row"
                          dx:DXSerializer.StoreLayoutMode="All"
                          dxg:GridSerializationOptions.AddNewColumns="true" 
                          dxg:GridSerializationOptions.RemoveOldColumns="False"
                           ScrollViewer.VerticalScrollBarVisibility="Auto"
                           ScrollViewer.HorizontalScrollBarVisibility="Auto"
                           MouseDown="_dataGrid_MouseDown"
                           >
                <dxg:GridControl.View  >

                <dxg:TableView 
                    x:Name="_viewDataGrid"
                    AllowPerPixelScrolling="True" 
                    ShowTotalSummary="True" 
                    AllowChangeBandParent="True" 
                    AllowChangeColumnParent="True"
                    ShowGroupPanel="False" 
                    AllowConditionalFormattingMenu="True"
                    ColumnHeaderTemplate="{StaticResource renameColumnHeaderTemplate}" ShowGridMenu="OnShowGridMenu"
              
                    >
                  
                </dxg:TableView>
             
            </dxg:GridControl.View>

         

            <dxg:GridControl.Columns>

                <dxg:GridColumn Header="Run Time" Binding="{Binding message_time}"  Width="75" SortMode="DisplayText" FieldName="message_time" IsSmart="True">
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="MM/dd/yyyy HH:mm:ss" />
                    </dxg:GridColumn.EditSettings>
                   
                </dxg:GridColumn>

                <dxg:GridColumn Header="Order" Binding="{Binding sequence}"  Width="75" SortMode="DisplayText" FieldName="sequence" 
                                IsSmart="True" HorizontalHeaderContentAlignment="Center" >
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                    </dxg:GridColumn.EditSettings>

                </dxg:GridColumn>


                <dxg:GridColumn FieldName="CustomColumn1" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn2" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn3" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn4" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn5" AllowUnboundExpressionEditor="True" 
                                     UnboundType="String" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn6" AllowUnboundExpressionEditor="True" 
                                     UnboundType="String" 
                                    ReadOnly="False" />
            </dxg:GridControl.Columns>

            <dxg:GridControl.ContextMenu>
                <ContextMenu PlacementTarget="{Binding ElementName=dgModels}">
                    <ContextMenu.Resources>
                        <Style x:Key="SimpleSysResources" TargetType="{x:Type MenuItem}">
                            <Setter Property = "FontSize" Value="16"/>
                        </Style>
                    </ContextMenu.Resources>
                
                   

                </ContextMenu>
            </dxg:GridControl.ContextMenu>


        </dxg:GridControl>
        <dx:WaitIndicator DeferedVisibility="{Binding IsWaitIndicatorVisible}" Name="TempbusyIndicator" Content="Loading..." Focusable="True" Grid.Row="1">
            <dx:WaitIndicator.ContentTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Please Wait" FontSize="20"/>
                        <TextBlock Text="{Binding}"/>
                    </StackPanel>
                </DataTemplate>
            </dx:WaitIndicator.ContentTemplate>
        </dx:WaitIndicator>

        <dxg:GridControl   AutoGenerateColumns="AddNew" EnableSmartColumnsGeneration="False"   x:Name="_dataGridDetail"   Visibility="visible"
                          FontWeight="SemiBold"     AllowLiveDataShaping="True"  Margin="7,35,0,0" Grid.Row="1" Grid.Column="1"
                          HorizontalAlignment="Stretch" 
                          HorizontalContentAlignment="Stretch" 
                          FontSize="12" FontFamily="Calibri" 
                          ItemsSource="{Binding DetailTable.DefaultView,Mode=OneWay,UpdateSourceTrigger=Default}"
                          SelectionMode="Row"
                          dx:DXSerializer.StoreLayoutMode="All"
                          dxg:GridSerializationOptions.AddNewColumns="true" 
                          dxg:GridSerializationOptions.RemoveOldColumns="False"
                           >
            <dxg:GridControl.View  >

                <dxg:TableView 
                    x:Name="_viewDataGridDetail"
                    AllowPerPixelScrolling="True" 
                    ShowTotalSummary="True" 
                    AllowChangeBandParent="True" 
                    AllowChangeColumnParent="True"
                    ShowGroupPanel="False" 
                    AllowConditionalFormattingMenu="True"
                    ColumnHeaderTemplate="{StaticResource renameColumnHeaderTemplate}" ShowGridMenu="OnShowGridMenu"
              
                    >

                </dxg:TableView>

            </dxg:GridControl.View>



            <dxg:GridControl.Columns>

                <dxg:GridColumn Header="Run Time" Binding="{Binding message_time}"  Width="75" SortMode="DisplayText" FieldName="message_time" IsSmart="True">
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings  DisplayFormat="MM/dd/yyyy HH:mm:ss" />
                    </dxg:GridColumn.EditSettings>

                </dxg:GridColumn>


                <dxg:GridColumn FieldName="CustomColumn1" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn2" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn3" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn4" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn5" AllowUnboundExpressionEditor="True" 
                                     UnboundType="String" 
                                    ReadOnly="False" />
                <dxg:GridColumn FieldName="CustomColumn6" AllowUnboundExpressionEditor="True" 
                                     UnboundType="String" 
                                    ReadOnly="False" />
            </dxg:GridControl.Columns>

            <dxg:GridControl.ContextMenu>
                <ContextMenu PlacementTarget="{Binding ElementName=dgModels}">
                    <ContextMenu.Resources>
                        <Style x:Key="SimpleSysResources" TargetType="{x:Type MenuItem}">
                            <Setter Property = "FontSize" Value="16"/>
                        </Style>
                    </ContextMenu.Resources>



                </ContextMenu>
            </dxg:GridControl.ContextMenu>


        </dxg:GridControl>
            </Grid>
        </TabItem>
        <!--End Data loads-->
        <!--begin security-->
        <TabItem  Header="Security" x:Name="BySecurityTabItem" Background="SeaGreen" FontSize="14" FontWeight="Bold">
           <Grid>
           <StackPanel Orientation="Horizontal">
            <ComboBox
            Text="{Binding Parameters.MajorAsset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        	x:Name="cmboMajorAsset" HorizontalAlignment="Left" Margin="5,8,0,0" 
            VerticalAlignment="top" 
        	Width="178" FontFamily="Calibri Black" FontSize="14" SelectionChanged="cmboDesk_SelectedIndexChanged"  />
            <!--<dxe:ComboBoxEdit EditValue="{Binding Parameters.SecurityName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			HorizontalAlignment="Left" 
			Margin="5,8,0,0"  x:Name="SecurityComboBoxEdit" 
			AllowDrop="True"
			VerticalAlignment="Top" Width="178"  
			IncrementalFiltering="True" 
			ImmediatePopup="True" 
			AutoComplete="False" 
			FilterCondition="Contains" 
			ValidateOnTextInput="False"
			IsSynchronizedWithCurrentItem="True"
			IsTextEditable="True" LostFocus="SecurityComboBoxEdit_LostFocus_1"  EditValueChanged="SecurityComboBoxEdit_EditValueChanged_1">

                        </dxe:ComboBoxEdit>-->
            <Button Width="10" Height="25" VerticalAlignment="Top" Margin="2,8" Background="Bisque" Click="BtnMain"></Button>
                        <ToggleButton VerticalAlignment="top"  Height="25" Margin="5,8" Width="105" Name="ToggleButtonP" IsChecked="{Binding Parameters.JustHoldings, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Content" Value="Holdings Only"/>
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Content" Value="All"/>
                                            <Setter Property="Background" Value="LightGoldenrodYellow"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
            <Button Height="25" Width="100" VerticalAlignment="Top" Margin="5,8" Content="Bad Prices" Click="BtnBadPrices"></Button>
            <Button Height="25" Width="125" VerticalAlignment="Top" Margin="5,8"  Click="BtnPriceChange">
                            <Button.Content>
                                <TextBlock Text="{Binding Parameters.PriceChange, StringFormat='Price change > {0} % '}" ></TextBlock>
                            </Button.Content>
                        </Button>
            <dxe:SpinEdit Height="25" VerticalAlignment="Top" Width="50" MinValue="0" MaxValue="100" Text="{Binding Parameters.PriceChange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
               Margin="0,8" ></dxe:SpinEdit>
            <Button Height="25" Width="125" VerticalAlignment="Top" Margin="8,8"  Click="BtnStale">
                            <Button.Content>
                                <TextBlock Text="{Binding Parameters.Stale, StringFormat='Stale Price > {0} Days'}"></TextBlock>
                            </Button.Content>
                        </Button>
             <dxe:SpinEdit Height="25" VerticalAlignment="Top" Width="50" MinValue="0" MaxValue="100" Text="{Binding Parameters.Stale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
               Margin="0,8" Name="SEStale"></dxe:SpinEdit>
         </StackPanel>

              <dxg:GridControl   AutoGenerateColumns="AddNew" EnableSmartColumnsGeneration="False"   x:Name="_dataGridSecurity"   Visibility="visible"
                          FontWeight="SemiBold"     AllowLiveDataShaping="True"  Margin="0,35,0,0" Grid.Row="1"
                          HorizontalAlignment="Stretch" 
                          HorizontalContentAlignment="Stretch" 
                          FontSize="12" FontFamily="Calibri" 
                          ItemsSource="{Binding SecurityTable.DefaultView,Mode=OneWay,UpdateSourceTrigger=Default}"
                          SelectionMode="Row"
                          dx:DXSerializer.StoreLayoutMode="All"
                          dxg:GridSerializationOptions.AddNewColumns="true" 
                          dxg:GridSerializationOptions.RemoveOldColumns="False"
                           ScrollViewer.VerticalScrollBarVisibility="Auto"
                           ScrollViewer.HorizontalScrollBarVisibility="Auto"
                           >
                        <dxg:GridControl.View  >
                            <dxg:TableView 
                        x:Name="_viewDataGridSecurity"
                        AllowPerPixelScrolling="True" 
                        ShowTotalSummary="True" 
                        AllowChangeBandParent="True" 
                        AllowChangeColumnParent="True"
                        ShowGroupPanel="False" 
                        AllowConditionalFormattingMenu="True"
                        ColumnHeaderTemplate="{StaticResource renameColumnHeaderTemplate}" ShowGridMenu="OnShowGridMenu">

                            </dxg:TableView>

                    </dxg:GridControl.View>
                        <dxg:GridControl.Columns>

                            <dxg:GridColumn Header="Modified Time" Binding="{Binding modified_time}"  Width="75" SortMode="DisplayText" FieldName="modified_time" IsSmart="True">
                                <dxg:GridColumn.EditSettings>
                                    <dxe:TextEditSettings  DisplayFormat="MM/dd/yyyy HH:mm" />
                                </dxg:GridColumn.EditSettings>

                            </dxg:GridColumn>

                            <dxg:GridColumn Header="Order" Binding="{Binding sequence}"  Width="75" SortMode="DisplayText" FieldName="sequence" 
                                IsSmart="True" HorizontalHeaderContentAlignment="Center" >
                                <dxg:GridColumn.EditSettings>
                                    <dxe:TextEditSettings HorizontalContentAlignment="Left"/>
                                </dxg:GridColumn.EditSettings>

                            </dxg:GridColumn>


                            <dxg:GridColumn FieldName="CustomColumn1" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                            <dxg:GridColumn FieldName="CustomColumn2" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                            <dxg:GridColumn FieldName="CustomColumn3" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                            <dxg:GridColumn FieldName="CustomColumn4" AllowUnboundExpressionEditor="True" 
                                     UnboundType="Decimal" 
                                    ReadOnly="False" />
                            <dxg:GridColumn FieldName="CustomColumn5" AllowUnboundExpressionEditor="True" 
                                     UnboundType="String" 
                                    ReadOnly="False" />
                            <dxg:GridColumn FieldName="CustomColumn6" AllowUnboundExpressionEditor="True" 
                                     UnboundType="String" 
                                    ReadOnly="False" />
                        </dxg:GridControl.Columns>
                        <dxg:GridControl.ContextMenu>
                            <ContextMenu PlacementTarget="{Binding ElementName=dgModels}">
                                <ContextMenu.Resources>
                                    <Style x:Key="SimpleSysResources" TargetType="{x:Type MenuItem}">
                                        <Setter Property = "FontSize" Value="16"/>
                                    </Style>
                                </ContextMenu.Resources>



                            </ContextMenu>
                        </dxg:GridControl.ContextMenu>
                    </dxg:GridControl>
           
           </Grid>
            </TabItem>
        </TabControl>
   </Grid>
</UserControl>
